                                                VSCODE SETUP

- Go to directory where you want to make the project.
- 'Shift + Right click' and select 'Open command prompt here' -> this opens the cmd prompt in that directory.
- In cmd prompt, type 'code .' (without the '') -> this opens VS Code in that directory.
- 'Ctrl + `' opens terminal.
- To set bash as default terminal, select dropdown menu on top right of terminal window (beside the + sign)
  and choose 'Select default shell'. Then, choose Bash and open a new terminal.

-------------------------------------------------------------------------------------------------------------------
                                            
                                            EXPRESS SERVER INTRO

Express is light weight framework to host a server
    -require('express')-> is used to import express server module functions
get and post are http request methods

By using this line of code we are importing the Express package.

// Importing express package
const express = require('express'); 

// Creating an object
const app = express(); 

By using these lines we are handing root route of the server and sending a GET request to it with a specific message.
app.get('/', function(req, res){
res.send('We are at the root route of our server');
});

GET is used to request data from a specified resource.The server returns the same header information that the 
HEAD method returns, but it also returns the body of the message
POST is used to send data to a server to create/update a resource.

NOTE: Do not use GET method for sensitive data. Always use POST.

-------------------------------------------------------------------------------------------------------------------

const express = require('express')  
const app = express()
const port = 3000

app.get('/', (req, res) => res.send('Hello World!'))

app.post('/',(req,res)=>res.json('HELLO World'))


app.listen(port, () => console.log(`Example app listening on port ${port}!`))

-------------------------------------------------------------------------------------------------------------------

                                                    AJAX


$.ajax({
            url: url,
            type: 'post',
            dataType: 'json',
            contentType: 'application/json',
            data: JSON.stringify(data),
            success:(resp)=>{
                console.log("SUCCESS")
                console.log(resp)
                return resolve({status:"success",data:resp})
            },
            error:(err)=>{
                // console.log("Error")
                // console.log(err)
                return resolve({status:"error",data:err})
            }
        });

    Ajax - Ajax is an acronym for Asynchronous Javascript and XML.AJAX is used to send and receive 
    request from the server without loading the whole page.AJAX contains several parameters
    {url,type,datatype,data}

    url- where the request is being sent
	type - method to send data(GET or POST)
    dataType - type of data to be received (normally JSON)
    contentType - type of data to be sent (normally application/JSON)
    data - the data to be sent (normally in JSON format)

-------------------------------------------------------------------------------------------------------------------

    
    Cross Origin(CORS- Cross origin Resource sharing)
    Cross-Origin Resource Sharing (CORS) is a mechanism that uses additional HTTP headers to tell browsers to give a 
    web application running at one origin, access to selected resources from a different origin. A web application
     executes a cross-origin HTTP request when it requests a resource that has a different origin 
     (domain, protocol, or port) from its own.
    Link-https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
    Link-https://www.geeksforgeeks.org/cross-origin-resource-sharing-cors/


-------------------------------------------------------------------------------------------------------------------

                                            LOCAL STORAGE

localStorage.setItem(key,value); to set// Here we are setting some values to the assigned elements.

For example,
localStorage.setItem("username",undefined)
sets the username stored in local storage to undefined, i.e., clears the username field.


localStorage.getItem(key); to get// Here we are retrieving the set values to the assigned elements.

For example,
let uname=localStorage.getItem("username")
gets the username entered by the user and assigns it to the variable uname.

